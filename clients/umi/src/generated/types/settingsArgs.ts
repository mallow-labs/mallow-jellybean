/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import { Option, OptionOrNullable, none } from '@metaplex-foundation/umi';
import {
  Serializer,
  array,
  mapSerializer,
  option,
  string,
  struct,
} from '@metaplex-foundation/umi/serializers';
import {
  FeeAccount,
  FeeAccountArgs,
  PrintFeeConfig,
  PrintFeeConfigArgs,
  getFeeAccountSerializer,
  getPrintFeeConfigSerializer,
} from '.';

/** Common arguments for settings-related operations (initialize and update_settings) */
export type SettingsArgs = {
  uri: string;
  feeAccounts: Array<FeeAccount>;
  printFeeConfig: Option<PrintFeeConfig>;
};

export type SettingsArgsArgs = {
  uri: string;
  feeAccounts: Array<FeeAccountArgs>;
  printFeeConfig?: OptionOrNullable<PrintFeeConfigArgs>;
};

export function getSettingsArgsSerializer(): Serializer<
  SettingsArgsArgs,
  SettingsArgs
> {
  return mapSerializer<SettingsArgsArgs, any, SettingsArgs>(
    struct<SettingsArgs>(
      [
        ['uri', string()],
        ['feeAccounts', array(getFeeAccountSerializer())],
        ['printFeeConfig', option(getPrintFeeConfigSerializer())],
      ],
      { description: 'SettingsArgs' }
    ),
    (value) => ({ ...value, printFeeConfig: value.printFeeConfig ?? none() })
  ) as Serializer<SettingsArgsArgs, SettingsArgs>;
}
