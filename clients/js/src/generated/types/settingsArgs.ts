/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getFeeAccountDecoder,
  getFeeAccountEncoder,
  type FeeAccount,
  type FeeAccountArgs,
} from '.';

/** Common arguments for settings-related operations (initialize and update_settings) */
export type SettingsArgs = {
  feeAccounts: Array<Option<FeeAccount>>;
  uri: string;
};

export type SettingsArgsArgs = {
  feeAccounts: Array<OptionOrNullable<FeeAccountArgs>>;
  uri: string;
};

export function getSettingsArgsEncoder(): Encoder<SettingsArgsArgs> {
  return getStructEncoder([
    ['feeAccounts', getArrayEncoder(getOptionEncoder(getFeeAccountEncoder()))],
    ['uri', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
  ]);
}

export function getSettingsArgsDecoder(): Decoder<SettingsArgs> {
  return getStructDecoder([
    ['feeAccounts', getArrayDecoder(getOptionDecoder(getFeeAccountDecoder()))],
    ['uri', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
  ]);
}

export function getSettingsArgsCodec(): Codec<SettingsArgsArgs, SettingsArgs> {
  return combineCodec(getSettingsArgsEncoder(), getSettingsArgsDecoder());
}
