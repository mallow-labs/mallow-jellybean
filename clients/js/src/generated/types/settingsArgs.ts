/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  none,
  transformEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getFeeAccountDecoder,
  getFeeAccountEncoder,
  getPrintFeeConfigDecoder,
  getPrintFeeConfigEncoder,
  type FeeAccount,
  type FeeAccountArgs,
  type PrintFeeConfig,
  type PrintFeeConfigArgs,
} from '.';

/** Common arguments for settings-related operations (initialize and update_settings) */
export type SettingsArgs = {
  uri: string;
  feeAccounts: Array<FeeAccount>;
  printFeeConfig: Option<PrintFeeConfig>;
};

export type SettingsArgsArgs = {
  uri: string;
  feeAccounts: Array<FeeAccountArgs>;
  printFeeConfig?: OptionOrNullable<PrintFeeConfigArgs>;
};

export function getSettingsArgsEncoder(): Encoder<SettingsArgsArgs> {
  return transformEncoder(
    getStructEncoder([
      ['uri', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
      ['feeAccounts', getArrayEncoder(getFeeAccountEncoder())],
      ['printFeeConfig', getOptionEncoder(getPrintFeeConfigEncoder())],
    ]),
    (value) => ({ ...value, printFeeConfig: value.printFeeConfig ?? none() })
  );
}

export function getSettingsArgsDecoder(): Decoder<SettingsArgs> {
  return getStructDecoder([
    ['uri', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['feeAccounts', getArrayDecoder(getFeeAccountDecoder())],
    ['printFeeConfig', getOptionDecoder(getPrintFeeConfigDecoder())],
  ]);
}

export function getSettingsArgsCodec(): Codec<SettingsArgsArgs, SettingsArgs> {
  return combineCodec(getSettingsArgsEncoder(), getSettingsArgsDecoder());
}
