/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  containsBytes,
  fixEncoderSize,
  getBytesEncoder,
  type Address,
  type ReadonlyUint8Array,
} from '@solana/kit';
import {
  type ParsedCreateInstruction,
  type ParsedIncrementInstruction,
} from '../instructions';

export const MALLOW_JELLYBEAN_PROGRAM_ADDRESS =
  'DNdkMr221bX2kviVo3kzQfuoqSR9uxqipfK2yHa9WHJw' as Address<'DNdkMr221bX2kviVo3kzQfuoqSR9uxqipfK2yHa9WHJw'>;

export enum MallowJellybeanAccount {
  Counter,
}

export function identifyMallowJellybeanAccount(
  account: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): MallowJellybeanAccount {
  const data = 'data' in account ? account.data : account;
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([255, 176, 4, 245, 188, 253, 124, 25])
      ),
      0
    )
  ) {
    return MallowJellybeanAccount.Counter;
  }
  throw new Error(
    'The provided account could not be identified as a mallowJellybean account.'
  );
}

export enum MallowJellybeanInstruction {
  Create,
  Increment,
}

export function identifyMallowJellybeanInstruction(
  instruction: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): MallowJellybeanInstruction {
  const data = 'data' in instruction ? instruction.data : instruction;
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([24, 30, 200, 40, 5, 28, 7, 119])
      ),
      0
    )
  ) {
    return MallowJellybeanInstruction.Create;
  }
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([11, 18, 104, 9, 104, 174, 59, 33])
      ),
      0
    )
  ) {
    return MallowJellybeanInstruction.Increment;
  }
  throw new Error(
    'The provided instruction could not be identified as a mallowJellybean instruction.'
  );
}

export type ParsedMallowJellybeanInstruction<
  TProgram extends string = 'DNdkMr221bX2kviVo3kzQfuoqSR9uxqipfK2yHa9WHJw',
> =
  | ({
      instructionType: MallowJellybeanInstruction.Create;
    } & ParsedCreateInstruction<TProgram>)
  | ({
      instructionType: MallowJellybeanInstruction.Increment;
    } & ParsedIncrementInstruction<TProgram>);
